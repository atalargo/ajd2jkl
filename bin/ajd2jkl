#!/usr/bin/env ruby

require 'ajd2jkl'
require 'commander'

Commander.configure do
    program :name, 'ApiJSDoc 2 Jekyll'
    program :version, Ajd2jkl::VERSION
    program :description, 'Command to parse file code using apidocjs comment to generate API docs in Jekyll format'
    program :genlist, 'List all available generators and exit'

    global_option('--verbose')

    command :genlist do |c|
        c.syntax = 'ajd2jkl genlist'
        c.description = 'List all available generators and exit'
        c.action do |_args, _options|
            Ajd2jkl::Generator.list_generators
            exit 0
        end
    end

    command :parse do |c|
        c.syntax = 'ajd2jkl parse [options] [src_dir ..]'
        c.description = 'Parse the sources in given directories and generate the doc'
        c.option '--dry-run', 'Only parse don\'t generate the doc'
        c.option '--debug', 'Debug mode'
        c.option '--output STRING', String, 'Output directory default is \'./doc\''
        c.option '--imgs STRING', String, 'Images directory to import'
        c.option '--config STRING', String, 'Configuration file. Json or YAML format'
        c.option '--generator STRING', String, 'Type of generate to use: Jekyll (default), swagger, etc. See command genlist for list of available generators'

        c.action do |args, options|
            options.default({ output: './doc', dry_run: false, generator: 'jekyll' })
            if args.count.zero?
                say("<%= color('You should give at least one source directy', :red) %>")
                command(:help).run(['parse'])
                exit 1
            end
            config = {}
            config = Ajd2jkl::Config.new(options.config).extract if options.config
            a2j = Ajd2jkl::Base.new options, config
            a2j.launch args
        end
    end

    command :serve do |c|
        c.syntax = 'ajd2jkl serve [options]'
        c.description = 'Parse the sources in given directories and generate the doc'
        c.option '--output STRING', String, 'Output directory default is \'./doc\''

        c.action do |_args, options|
            options.default({ output: './doc', dry_run: false, generator: 'jekyll' })
            config = {}
            config = Ajd2jkl::Config.new(options.config).extract if options.config
            dir = Ajd2jkl::Generator::Base.new(options, config, nil).output_dir
            IO.pipe do |read_pipe, write_pipe|
                fork do
                    `cd #{dir} && bundle exec jekyll serve --no-watch --verbose`
                end
                write_pipe.close
                while line = read_pipe.gets
                    puts "Jekyll serve: #{line}"
                end
            end

        end
    end

    default_command :parse
end
